-----------------------------------------------------------------------------------
--
--  File: Monitoring_config_vX.cdb
--
--  Date: 2020-02-04
--
--  Purpose: Configure all monitoring categories and entries.
--
--  Date    Sign   History
--  ------  ----   -----------------------------------------------------------------
--  200325  HHANSE First version

-----------------------------------------------------------------------------------
SET SERVEROUTPUT ON








--- Create TESTMONITORING User

DECLARE
   --
   ts_default_    VARCHAR2(30) := Fnd_Setting_Api.Get_Value('TS_DEFAULT');
   ts_temp_       VARCHAR2(30) := Fnd_Setting_Api.Get_Value('TS_TEMPORARY');
   dummy_         VARCHAR2(30);
   --
   --
   

   FUNCTION Is_Only_Fnd_User_Exist___(user_name_ VARCHAR2) RETURN BOOLEAN
   IS
      CURSOR get_fnd_user IS
         SELECT 1 FROM fnd_user_tab WHERE identity = UPPER(user_name_);

      CURSOR get_dba_user IS
         SELECT 1 FROM dba_users WHERE username = UPPER(user_name_);

      temp_ NUMBER;
      result_ BOOLEAN;

   BEGIN
      OPEN get_fnd_user;
      OPEN get_dba_user;

      FETCH get_fnd_user INTO temp_;
      FETCH get_dba_user INTO temp_;

      IF get_fnd_user%FOUND AND get_dba_user%NOTFOUND THEN
         result_ := TRUE;
      ELSE
         result_ := FALSE;
      END IF;
      CLOSE get_fnd_user;
      CLOSE get_dba_user;
      RETURN result_;
   END;
   --
   PROCEDURE Create_User (
      identity_             IN VARCHAR2,
      description_          IN VARCHAR2,
      oracle_user_          IN VARCHAR2,
      web_user_             IN VARCHAR2 DEFAULT NULL,
      active_               IN VARCHAR2 DEFAULT 'FALSE',
      expire_password_      IN VARCHAR2 DEFAULT 'FALSE',
      set_password_         IN VARCHAR2 DEFAULT 'TRUE',
      default_tablespace_   IN VARCHAR2 DEFAULT ts_default_,
      temporary_tablespace_ IN VARCHAR2 DEFAULT ts_temp_)
   IS
      info_  VARCHAR2(2000);
      objid_ VARCHAR2(2000);
      objv_  VARCHAR2(2000);
      attr_  VARCHAR2(2000);
      --
      fnduser_exists    EXCEPTION;
      fnddirectoty_exists EXCEPTION;
      TESTsys_  CONSTANT VARCHAR2(30) := 'TESTSYS';
      stmnt_            VARCHAR2(2000);
      def_profile_      VARCHAR2(100);
      password_         VARCHAR2(30) := NULL;
      PRAGMA            EXCEPTION_INIT(fnduser_exists, -20112);
      PRAGMA            EXCEPTION_INIT(fnddirectoty_exists, -20110);
      CURSOR check_web_user_ao (username_ VARCHAR2) IS
         SELECT objid, objversion
         FROM fnd_user
         WHERE identity = username_
         AND web_user IS NULL;
   BEGIN
      Client_SYS.Add_To_Attr('IDENTITY', identity_, attr_);
      Client_SYS.Add_To_Attr('DESCRIPTION', description_, attr_);
      Client_SYS.Add_To_Attr('ORACLE_USER', oracle_user_, attr_);
      IF set_password_ = 'TRUE' THEN
         password_ :=  oracle_user_;
      END IF;
      Client_SYS.Add_To_Attr('ORACLE_PASSWORD', password_, attr_);
      Client_SYS.Add_To_Attr('WEB_USER', web_user_, attr_);
      Client_SYS.Add_To_Attr('ACTIVE', active_, attr_);
      Client_SYS.Add_To_Attr('EXPIRE_PASSWORD', expire_password_, attr_);
      Client_SYS.Add_To_Attr('DEFAULT_TABLESPACE', default_tablespace_, attr_);
      Client_SYS.Add_To_Attr('TEMPORARY_TABLESPACE', temporary_tablespace_, attr_);
      Client_SYS.Add_To_Attr('ORACLE_PROFILE', 'TEST_INTERNAL', attr_);

      IF Is_Only_Fnd_User_Exist___(oracle_user_) THEN
         --Handles the situation where only the FND_USER Exist
         def_profile_ := Nvl(Fnd_Setting_API.Get_Value('DEFAULT_PROFILE'), 'DEFAULT');
         IF set_password_ = 'FALSE' THEN
            password_ := Fnd_User_API.Create_Random_Pwd__;
         END IF;
         stmnt_ := 'CREATE USER "'||oracle_user_||
                   '" IDENTIFIED BY "'||password_||
                   '" PROFILE "'||'TEST_INTERNAL'||
                   '" DEFAULT TABLESPACE '||default_tablespace_||
                   ' TEMPORARY TABLESPACE '||temporary_tablespace_;

         IF expire_password_ = 'TRUE' THEN
            stmnt_ := stmnt_ || ' PASSWORD EXPIRE';
         END IF;
         EXECUTE IMMEDIATE stmnt_;
         -- Grant connect through
         stmnt_ := 'ALTER USER "'||oracle_user_||'" GRANT CONNECT THROUGH '||TESTsys_;
         EXECUTE IMMEDIATE stmnt_;
         Dbms_Output.Put_Line('INFO: Only Foundation1 user found, Oracle user created for '||identity_||'.');
      ELSE
         --Should be handled in the normal way.
         Fnd_User_API.New__(info_, objid_, objv_, attr_, 'DO');
      END IF;
   EXCEPTION
      WHEN fnddirectoty_exists THEN
         NULL;
      WHEN fnduser_exists THEN
         BEGIN
            IF identity_ = USER THEN
               FOR rec_ IN check_web_user_ao(identity_) LOOP
                  Client_SYS.Clear_Attr(attr_);
                  Client_SYS.Add_To_Attr('WEB_USER', web_user_, attr_);
                  Fnd_User_API.Modify__(info_, rec_.objid, rec_.objversion, attr_, 'DO');
               END LOOP;
            END IF;
         EXCEPTION
            WHEN OTHERS THEN
               Dbms_Output.Put_Line('INFO: Something went wrong when updating '||identity_||' user.');
               Dbms_Output.Put_Line('INFO: ' || sqlerrm);
         END;
      WHEN OTHERS THEN
         Dbms_Output.Put_Line('INFO: Something went wrong when creating '||identity_||' user.');
         Dbms_Output.Put_Line('INFO: ' || sqlerrm);
         RAISE;
   END;
BEGIN
   --
   -- Create TEST Monitoring User
   --
   Create_User ('TESTMONITORING', 'TEST Monitoring user', 'TESTMONITORING', 'TESTMONITORING', 'FALSE', 'FALSE','TRUE');
END;
/








-- Create ROLE FND_MONITORING and tie to TESTMONITORING


DECLARE



	PROCEDURE Run_Ddl_Command___ (
	   stmt_ IN VARCHAR2,
	   show_errors_ IN BOOLEAN DEFAULT TRUE,
	   raise_       IN BOOLEAN DEFAULT FALSE )
	IS
	BEGIN
	   EXECUTE IMMEDIATE stmt_;
	EXCEPTION
	   WHEN OTHERS THEN
		  IF show_errors_ THEN
			 dbms_output.put_line('ERROR  : ' || stmt_);
			 dbms_output.put_line('ERROR  : ' || SQLERRM);
		  END IF;
		  IF raise_ THEN
			 RAISE;
		  END IF;
	END Run_Ddl_Command___;

	PROCEDURE Create_Oracle_Role___(
	   role_ IN VARCHAR2 )
	IS
	BEGIN
	   Run_Ddl_Command___('CREATE ROLE ' || role_);
	END Create_Oracle_Role___;


	FUNCTION Is_Oracle_Role_Created___(
	   role_ VARCHAR2 ) RETURN BOOLEAN
	IS
	   temp_ NUMBER;
	   CURSOR check_oracle_role IS
		  SELECT 1
		  FROM dba_roles
		  WHERE role=UPPER(role_);

	BEGIN
	   OPEN check_oracle_role;
	   FETCH check_oracle_role INTO temp_;
	   IF check_oracle_role%FOUND THEN
		  CLOSE check_oracle_role;
		  RETURN TRUE;
	   ELSE
		  CLOSE check_oracle_role;
		  RETURN FALSE;
	   END IF;
	END Is_Oracle_Role_Created___;

	FUNCTION Is_Fnd_Role_Created___(role_ VARCHAR2) RETURN BOOLEAN
	IS
	   temp_ NUMBER;

	   CURSOR check_fnd_role IS
		  SELECT 1
		  FROM fnd_role_tab
		  WHERE role=UPPER(role_);
	BEGIN
	   OPEN check_fnd_role;
	   FETCH check_fnd_role INTO temp_;
	   IF check_fnd_role%FOUND THEN
		  CLOSE check_fnd_role;
		  RETURN TRUE;
	   ELSE
		  CLOSE check_fnd_role;
		  RETURN FALSE;
	   END IF;
	END Is_Fnd_Role_Created___;

	PROCEDURE Create_Role___ (
	   role_        IN VARCHAR2,
	   description_ IN VARCHAR2,
	   role_type_   IN VARCHAR2 )
	IS
	   upper_role_     VARCHAR2(30);
	   user_role_exist EXCEPTION;
	   PRAGMA          exception_init(user_role_exist, -20112);
	BEGIN
	   upper_role_ := UPPER(role_);
	   IF Is_Fnd_Role_Created___(upper_role_) AND NOT Is_Oracle_Role_Created___(upper_role_) THEN
		  --
		  --Handles the situation where somehow the Foundation1 role exist but the oracle role doesnt.
		  --
		  Create_Oracle_Role___(upper_role_);
	   ELSE
		  BEGIN
			 Security_SYS.Create_Role(upper_role_, description_, role_type_);
		  EXCEPTION
			 WHEN user_role_exist THEN
				NULL;
		  END;
	   END IF;
	END Create_Role___;





	PROCEDURE Grant_Role___ (
	   role_ VARCHAR2,
	   grantee_ VARCHAR2 )
	IS
	   user_role_exist  EXCEPTION;
	   PRAGMA           exception_init(user_role_exist, -20112);
	BEGIN
	   Security_SYS.Grant_Role(role_, grantee_);
	EXCEPTION
	   WHEN user_role_exist THEN
		  --Should continue with the oracle grant
		  Run_Ddl_Command___('GRANT "'||role_||'" TO "'||grantee_||'"');
	   WHEN OTHERS THEN
		  NULL;
	END Grant_Role___;
BEGIN
	Create_Role___('FND_MONITORING', 'Required grants to query application monitoring results', 'ENDUSERROLE');
	Run_Ddl_Command___('GRANT "'||'FND_RUNTIME'||'" TO "'||'FND_MONITORING'||'"');
	Security_SYS.Grant_System_Privilege('ADMINISTRATOR', 'FND_MONITORING');
	Security_SYS.Grant_Method('FND_MONITOR_ENTRY_API.Get_Result', 'FND_MONITORING');
	Security_SYS.Grant_Method('ARCHIVE_API.New_Client_Report', 'FND_MONITORING');
	Security_SYS.Grant_Method('ARCHIVE_DISTRIBUTION_API.Remove_User', 'FND_MONITORING');
	Security_SYS.Grant_Method('REPORT_SYS.Request_Formatting', 'FND_MONITORING');
	Security_SYS.Grant_Method('SCHEDULING_SITE_CONFIG_API.Get_Scheduling_System_Date', 'FND_MONITORING');

	Grant_Role___('FND_MONITORING','TESTMONITORING');
     
	 
	 
	update fnd_user_tab set active='TRUE' where identity='TESTMONITORING'; 
	security_sys.refresh_active_list__(1);	
END;
/

-- Activate user TESTMONITORING 
alter user TESTmonitoring account unlock;















-- Add  Monitor Categories

DECLARE
   dummy_ NUMBER;
   CURSOR check_ref IS
      SELECT COUNT(*)
      FROM reference_sys_tab
      WHERE ref_name = 'FndMonitorCategory'
      AND option_name = 'RESTRICTED';
   PROCEDURE Set_Category (
      category_id_ IN VARCHAR2,
      description_ IN VARCHAR2,
      order_seq_   IN VARCHAR2,
      remove_      IN VARCHAR2 DEFAULT 'FALSE' )
   IS
      info_       VARCHAR2(32000);
      attr_       VARCHAR2(32000);
      objid_      VARCHAR2(2000);
      objversion_ VARCHAR2(32000);
   BEGIN
      SELECT objid, objversion
         INTO objid_, objversion_
         FROM fnd_monitor_category
         WHERE category_id = category_id_;
      IF remove_ = 'FALSE' THEN
         Client_SYS.Add_To_Attr('DESCRIPTION', description_, attr_);
         Client_SYS.Add_To_Attr('ORDER_SEQ', order_seq_, attr_);
         Fnd_Monitor_Category_API.Modify__(info_, objid_, objversion_, attr_, 'DO');
      ELSE 
         Fnd_Monitor_Category_API.Remove__(info_, objid_, objversion_, 'DO');
      END IF;
   EXCEPTION
      WHEN no_data_found THEN
        IF remove_ = 'FALSE' THEN
         Client_SYS.Add_To_Attr('CATEGORY_ID', category_id_, attr_);
         Client_SYS.Add_To_Attr('DESCRIPTION', description_, attr_);
         Client_SYS.Add_To_Attr('ORDER_SEQ', order_seq_, attr_);
         Fnd_Monitor_Category_API.New__(info_, objid_, objversion_, attr_, 'DO');
        END IF;
   END Set_Category;

BEGIN
   -- In older versions, there existed RESTRICTED reference on FndMonitorCategory why the reference cache must be updated
   OPEN check_ref;
   FETCH check_ref INTO dummy_;
   IF check_ref%FOUND THEN
      CLOSE check_ref;
      Reference_SYS.Refresh_Active_List__('FND_MONITOR_CATEGORY');
   ELSE
      CLOSE check_ref;
   END IF;
   Set_Category('EVENT_SERVERS',       	'Event Server',            	'10', 'TRUE');
   Set_Category('PRINT_SERVERS',       	'Print Server',            	'15', 'TRUE');
   Set_Category('BATCH_QUEUES',        	'Batch Queues',            	'20');
   Set_Category('QUEUE_ENTRIES',       	'Background Jobs',         	'25');
   Set_Category('SERVER_PROC',         	'Server Processes',        	'30');
   Set_Category('CONNECTIVITY',        	'Connectivity',            	'35');
   Set_Category('REPLICATION',         	'Replication',             	'40');
   Set_Category('DATA_ARCHIVING',      	'Data Archiving',          	'45');
   Set_Category('CLEANUP',             	'Cleanup',                 	'50');
   Set_Category('APPL_OBJECTS',        	'Application Objects',     	'55');
   Set_Category('USERS_ROLES',         	'Users and Roles',         	'60');
   Set_Category('LICENSE',             	'TEST License',             	'62');
   Set_Category('ORACLE',              	'Oracle',                  	'65');
   Set_Category('PLSQLAP',             	'PL/SQL Access Provider',  	'70');
   Set_Category('APPLICATION_SEARCH',	'Application Search',      	'80');
   
   Set_Category('ORACLE_AUDIT',        	'Oracle Audit',            	'65');
   Set_Category('CACHE',        		'Server Caches',           	'90');
   Set_Category('TRIGGERS',       		'Triggers',            		'100');
   Set_Category('CONNECT',        		'Connect',            		'110');
   Set_Category('PRINT_AGENT',        	'Print Agent',            	'120');
   Set_Category('PRINT_QUEUE',        	'Print Queue',            	'130');
   Set_Category('BATCH_PROCESSOR',      'Batch Processor',          '140');
   Set_Category('DATABASE_CONFIG',      'Database Configuration',   '150');
   Set_Category('ORACLE_HEALTH',        'Database Health',          '160');
END;
/

COMMIT
/




-- Add  Monitor Entries


DECLARE
	TYPE Import_Rec IS RECORD
	(   
      entry_id_            fnd_monitor_entry_tab.entry_id%TYPE,
      description_         fnd_monitor_entry_tab.description%TYPE,
      category_id_         fnd_monitor_entry_tab.category_id%TYPE,
      order_seq_           fnd_monitor_entry_tab.order_seq%TYPE,
      sql_stmt_            fnd_monitor_entry_tab.sql_stmt%TYPE,
      drill_down_stmt_     fnd_monitor_entry_tab.drill_down_stmt%TYPE,
      lower_warning_limit_ fnd_monitor_entry_tab.lower_warning_limit%TYPE,
      upper_warning_limit_ fnd_monitor_entry_tab.upper_warning_limit%TYPE,
      help_text_           fnd_monitor_entry_tab.help_text%TYPE,
      active_              fnd_monitor_entry_tab.active%TYPE,
	  system_defined_      VARCHAR2(10),
	  remove_		       VARCHAR2(10)
    );
	
	rec_ Import_Rec;
	
	PROCEDURE Set_Entry (
      entry_id_            IN VARCHAR2,
      description_         IN VARCHAR2,
      category_id_         IN VARCHAR2,
      order_seq_           IN VARCHAR2,
      sql_stmt_            IN VARCHAR2,
      drill_down_stmt_     IN VARCHAR2,
      lower_warning_limit_ IN VARCHAR2,
      upper_warning_limit_ IN VARCHAR2,
      help_text_           IN VARCHAR2,
      active_              IN VARCHAR2 DEFAULT 'TRUE',
	  system_defined_	   IN VARCHAR2 DEFAULT 'NOT IN USE',
      remove_              IN VARCHAR2 DEFAULT 'FALSE' )
   IS
      info_       VARCHAR2(32000);
      attr_       VARCHAR2(32000);
      objid_      VARCHAR2(2000);
      objversion_ VARCHAR2(32000);
   BEGIN
      SELECT objid, objversion
         INTO objid_, objversion_
         FROM fnd_monitor_entry
         WHERE entry_id = entry_id_;
      IF remove_ = 'FALSE' THEN
         Client_SYS.Add_To_Attr('DESCRIPTION', description_, attr_);
         Client_SYS.Add_To_Attr('CATEGORY_ID', category_id_, attr_);
         Client_SYS.Add_To_Attr('ORDER_SEQ', order_seq_, attr_);
         Client_SYS.Add_To_Attr('SQL_STMT', sql_stmt_, attr_);
         Client_SYS.Add_To_Attr('DRILL_DOWN_STMT', drill_down_stmt_, attr_);
         Client_SYS.Add_To_Attr('LOWER_WARNING_LIMIT', lower_warning_limit_, attr_);
         Client_SYS.Add_To_Attr('UPPER_WARNING_LIMIT', upper_warning_limit_, attr_);
         Client_SYS.Add_To_Attr('HELP_TEXT', help_text_, attr_);
		 -- Do not change active flag in existing installation
         -- Client_SYS.Add_To_Attr('ACTIVE', active_, attr_);
         Fnd_Monitor_Entry_API.Modify__(info_, objid_, objversion_, attr_, 'DO');
      ELSE 
         Fnd_Monitor_Entry_API.Remove__(info_, objid_, objversion_, 'DO');
      END IF;
   EXCEPTION
      WHEN no_data_found THEN
		BEGIN
			IF remove_ = 'FALSE' THEN
			 Client_SYS.Add_To_Attr('ENTRY_ID', entry_id_, attr_);
			 Client_SYS.Add_To_Attr('DESCRIPTION', description_, attr_);
			 Client_SYS.Add_To_Attr('CATEGORY_ID', category_id_, attr_);
			 Client_SYS.Add_To_Attr('ORDER_SEQ', order_seq_, attr_);
			 Client_SYS.Add_To_Attr('SQL_STMT', sql_stmt_, attr_);
			 Client_SYS.Add_To_Attr('DRILL_DOWN_STMT', drill_down_stmt_, attr_);
			 Client_SYS.Add_To_Attr('LOWER_WARNING_LIMIT', lower_warning_limit_, attr_);
			 Client_SYS.Add_To_Attr('UPPER_WARNING_LIMIT', upper_warning_limit_, attr_);
			 Client_SYS.Add_To_Attr('HELP_TEXT', help_text_, attr_);
			 Client_SYS.Add_To_Attr('ACTIVE', active_, attr_);
			 Fnd_Monitor_Entry_API.New__(info_, objid_, objversion_, attr_, 'DO');
			END IF;
		EXCEPTION
			WHEN OTHERS THEN
				null;
		END;
   END Set_Entry;
   
	PROCEDURE Import (
	   newrec_ Import_rec
	   )
	IS
	BEGIN
	  Set_Entry(
		 newrec_.entry_id_,
		 newrec_.description_,
		 newrec_.category_id_,
		 newrec_.order_seq_,
		 newrec_.sql_stmt_,
		 newrec_.drill_down_stmt_,
		 newrec_.lower_warning_limit_,
		 newrec_.upper_warning_limit_,
		 newrec_.help_text_,
		 newrec_.active_
		 );
	END Import;	   

BEGIN
------------------------------------
-- Entries for category BATCH_QUEUES
------------------------------------
   rec_.entry_id_ := 'BATCH_QUEUE_CONFIG';
   rec_.description_ := 'Number of configured batch queues';
   rec_.category_id_ := 'BATCH_QUEUES';
   rec_.order_seq_ := '1';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM batch_queue';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 1;
   rec_.upper_warning_limit_ := NULL;
   rec_.help_text_ := 'If no queues are defined, no business processes can be executed in background mode.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'BATCH_QUEUE_ACTIVE';
   rec_.description_ := 'Number of active batch queues';
   rec_.category_id_ := 'BATCH_QUEUES';
   rec_.order_seq_ := '2';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM batch_queue WHERE active=''TRUE''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 1;
   rec_.upper_warning_limit_ := NULL;
   rec_.help_text_ := 'If no queues are defined and active, no business processes can be executed in background mode. Please enable one or several batch queues to be active and running.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
   
   rec_.entry_id_ := 'BATCH_QUEUE_PROC';
   rec_.description_ := 'Number of active batch queues processes';
   rec_.category_id_ := 'BATCH_QUEUES';
   rec_.order_seq_ := '3';
   rec_.sql_stmt_ := 'SELECT SUM(process_number) FROM batch_queue WHERE active=''TRUE''';
   rec_.drill_down_stmt_ := 'SELECT * FROM batch_queue WHERE active=''TRUE''';
   rec_.lower_warning_limit_ := 1;
   rec_.upper_warning_limit_ := 3;
   rec_.help_text_ := 'If the total number of active queue processes is too low, the system will appear as single-threaded. This means that single background jobs may prevent other jobs to be processed. If that is the situation, please increase the number of processes of the enabled batch queues.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'QUEUE_PROCESSES';
   rec_.description_ := 'Number of Oracle queue processes';
   rec_.category_id_ := 'BATCH_QUEUES';
   rec_.order_seq_ := '4';
   rec_.sql_stmt_ := 'SELECT value FROM sys.v_$parameter WHERE name = ''job_queue_processes''';
   rec_.drill_down_stmt_ := 'SELECT * FROM sys.v_$parameter WHERE name = ''job_queue_processes''';
   rec_.lower_warning_limit_ := 3;
   rec_.upper_warning_limit_ := 10;
   rec_.help_text_ := 'The Oracle queue processes executes the background processes.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'DEFERRED_JOBS_EXECUTING_12H';
   rec_.description_ := 'Number of background jobs executing more than 12h';
   rec_.category_id_ := 'BATCH_QUEUES';
   rec_.order_seq_ := '5';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM dba_scheduler_jobs WHERE state = ''RUNNING'' and last_start_date<sysdate-12/24';
   rec_.drill_down_stmt_ := 'SELECT 0 FROM dual WHERE 1=2';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Background Jobs have abnormal execution time.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'STUCK_BATCH_QUEUE_PROCESSES';
   rec_.description_ := 'Number of stuck batch queue processes';
   rec_.category_id_ := 'BATCH_QUEUES';
   rec_.order_seq_ := '6';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM batch_job WHERE action LIKE ''%Transaction_SYS.%'' AND next_date < (sysdate - 15/86400) AND enabled = ''TRUE'' AND status != ''RUNNING''';
   rec_.drill_down_stmt_ := 'SELECT 0 FROM dual WHERE 1=2';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Some Background Job processes have not started.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------
-- Entries for category QUEUE_ENTRIES
------------------------------------

   rec_.entry_id_ := 'QUEUE_READY';
   rec_.description_ := 'Number of background jobs ready';
   rec_.category_id_ := 'QUEUE_ENTRIES';
   rec_.order_seq_ := '1';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM deferred_job WHERE state_db = ''Ready''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 100000;
   rec_.help_text_ := 'This value may vary due to the fact that ready jobs will be removed through the ordinary cleanup mechanism. This value can be a way to measure the through-put in the system based on background jobs.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'QUEUE_WAIT';
   rec_.description_ := 'Number of background jobs waiting';
   rec_.category_id_ := 'QUEUE_ENTRIES';
   rec_.order_seq_ := '2';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM deferred_job WHERE state_db = ''Posted''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 30;
   rec_.help_text_ := 'Stopped background processes may lead to a too low value. If background jobs are connected to specific queues that are not running may lead to a too high value. Please enable a higher number of processes for such queues.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'QUEUE_EXEC';
   rec_.description_ := 'Number of background jobs executing';
   rec_.category_id_ := 'QUEUE_ENTRIES';
   rec_.order_seq_ := '3';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM deferred_job WHERE state_db = ''Executing''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 10;
   rec_.help_text_ := 'A way to measure the multi-threaded behavior when a system is on heavy load. If too many jobs are executing, this might be due to jobs that are not finished as they should.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'QUEUE_ERROR';
   rec_.description_ := 'Number of background jobs error';
   rec_.category_id_ := 'QUEUE_ENTRIES';
   rec_.order_seq_ := '4';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM deferred_job WHERE state_db = ''Error''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Erroneous background jobs must be checked while they may prevent important business activities to be processed. These jobs are often stopped due to Oracle exceptions in the logic.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------
-- Entries for category SERVER_PROC
------------------------------------

   rec_.entry_id_ := 'SERVER_PROC_TOTAL';
   rec_.description_ := 'Number of enabled server processes';
   rec_.category_id_ := 'SERVER_PROC';
   rec_.order_seq_ := '1';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM batch_job WHERE enabled = ''TRUE''';
   rec_.drill_down_stmt_ := 'SELECT job_name, action, enabled FROM batch_job WHERE enabled = ''TRUE''';
   rec_.lower_warning_limit_ := 3;
   rec_.upper_warning_limit_ := NULL;
   rec_.help_text_ := 'The total number of enabled background processes for the moment.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'SERVER_PROC_BROKEN';
   rec_.description_ := 'Number of disabled server processes';
   rec_.category_id_ := 'SERVER_PROC';
   rec_.order_seq_ := '2';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM batch_job WHERE enabled = ''FALSE''';
   rec_.drill_down_stmt_ := 'SELECT job_name, action, enabled FROM batch_job WHERE enabled = ''FALSE''';
   rec_.lower_warning_limit_ := NULL;
   rec_.upper_warning_limit_ := NULL;
   rec_.help_text_ := 'The total number of disabled background processes for the moment.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------
-- Entries for category CONNECTIVITY
------------------------------------

   rec_.entry_id_ := 'CONNECTIVITY_PROCESSES';
   rec_.description_ := 'Number of connectivity processes';
   rec_.category_id_ := 'CONNECTIVITY';
   rec_.order_seq_ := '1';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM batch_job WHERE action LIKE ''Connectivity_SYS%''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 1;
   rec_.upper_warning_limit_ := 5;
   rec_.help_text_ := 'For systems based upon lots of activities through inbox/outbox, this value may be pretty high. For systems not using inbox/outbox at all, some memory can be saved by shutting these processes down.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                             
   rec_.entry_id_ := 'CONNECTIVITY_INBOX_ROUTING';
   rec_.description_ := 'Number of stuck inbox messages more than 30m';
   rec_.category_id_ := 'CONNECTIVITY';
   rec_.order_seq_ := '2';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM in_message WHERE state in (''Posted'',''Processing'') AND objversion <to_char(sysdate - 1 / 48,''YYYYMMDDHH24MISS'')';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Check Database Processes in Solution Manager and Connectivity parameters in system parameters.';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                          
   rec_.entry_id_ := 'CONNECTIVITY_OUTBOX_ROUTING';
   rec_.description_ := 'Number of stuck outbox messages more than 30m';
   rec_.category_id_ := 'CONNECTIVITY';
   rec_.order_seq_ := '3';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM out_message WHERE state in (''Posted'',''Processing'') AND objversion < to_char(sysdate - 1 / 48,''YYYYMMDDHH24MISS'')';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Check Database Processes in Solution Manager and Connectivity parameters in system parameters.';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                           
   rec_.entry_id_ := 'CONNECTIVITY_DB_PROCESSES';
   rec_.description_ := 'Number of connectivity processes executed last 30m';
   rec_.category_id_ := 'CONNECTIVITY';
   rec_.order_seq_ := '4';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM batch_job WHERE action like ''%Connectivity_SYS.%'' AND last_date > sysdate - 1 / 48';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 2;
   rec_.upper_warning_limit_ := 2;
   rec_.help_text_ := 'Check Database Processes in Solution Manager and Connectivity parameters in system parameters.';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------
-- Entries for category REPLICATION
------------------------------------

   rec_.entry_id_ := 'REPLICATION_PROCESSES';
   rec_.description_ := 'Number of replication processes';
   rec_.category_id_ := 'REPLICATION';
   rec_.order_seq_ := '1';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM batch_job WHERE action LIKE ''Replication_SYS%''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := NULL;
   rec_.upper_warning_limit_ := NULL;
   rec_.help_text_ := 'For systems based upon lots of activities through database replication, this value may be pretty high. For systems not using replication at all, some memory can be saved by shutting these processes down.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------
-- Entries for category DATA_ARCHIVING
------------------------------------

   rec_.entry_id_ := 'ARCHIVING_PROCESSES';
   rec_.description_ := 'Number of archiving processes';
   rec_.category_id_ := 'DATA_ARCHIVING';
   rec_.order_seq_ := '1';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM batch_job WHERE action LIKE ''%Data_Archive_Util_API.Process_Archive%''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := NULL;
   rec_.upper_warning_limit_ := NULL;
   rec_.help_text_ := 'For systems using archiving, there should be at least one process running. For systems not using archiving at all, some memory can be saved by shutting these processes down.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------
-- Entries for category CLEANUP
------------------------------------

   rec_.entry_id_ := 'CLEANUP_TOTAL';
   rec_.description_ := 'Number of cleanup processes';
   rec_.category_id_ := 'CLEANUP';
   rec_.order_seq_ := '1';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM batch_schedule_method m, batch_schedule s WHERE s.schedule_method_id = m.schedule_method_id AND m.method_name IN (''BATCH_SYS.FND_HEAVY_CLEANUP_'', ''BATCH_SYS.FND_LIGHT_CLEANUP_'') AND s.active_db = ''TRUE''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 2;
   rec_.upper_warning_limit_ := NULL;
   rec_.help_text_ := 'The cleanup processes are important to deliver as good performance as possible. Please ensure that they are active/running and not broken.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------
-- Entries for category APPL_OBJECTS
------------------------------------

   rec_.entry_id_ := 'INVALID_TRIGGERS';
   rec_.description_ := 'Number of invalid triggers';
   rec_.category_id_ := 'APPL_OBJECTS';
   rec_.order_seq_ := '1';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM oracle_user_objects WHERE status = ''INVALID'' and object_type = ''TRIGGER''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Invalid triggers should not exist, please re-compile them.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'INVALID_PACKAGES';
   rec_.description_ := 'Number of invalid packages';
   rec_.category_id_ := 'APPL_OBJECTS';
   rec_.order_seq_ := '2';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM oracle_user_objects WHERE status = ''INVALID'' and object_type = ''PACKAGE''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Invalid package specifications should not exist, please re-compile them.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'INVALID_BODIES';
   rec_.description_ := 'Number of invalid package bodies';
   rec_.category_id_ := 'APPL_OBJECTS';
   rec_.order_seq_ := '3';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM oracle_user_objects WHERE status = ''INVALID'' and object_type = ''PACKAGE BODY''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Invalid package bodies should not exist, please re-compile them.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'INVALID_VIEWS';
   rec_.description_ := 'Number of invalid views';
   rec_.category_id_ := 'APPL_OBJECTS';
   rec_.order_seq_ := '4';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM oracle_user_objects WHERE status = ''INVALID'' and object_type = ''VIEW''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Invalid views should not exist, please re-compile them.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------
-- Entries for category USERS_ROLES
------------------------------------

   rec_.entry_id_ := 'FND_USERS';
   rec_.description_ := 'Number of Foundation1 users';
   rec_.category_id_ := 'USERS_ROLES';
   rec_.order_seq_ := '1';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM fnd_user WHERE active = ''TRUE''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := NULL;
   rec_.help_text_ := 'The number of Foundation1 users that can access the application.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'ROLES_PER_USER';
   rec_.description_ := 'Average number of active roles per user';
   rec_.category_id_ := 'USERS_ROLES';
   rec_.order_seq_ := '2';
   rec_.sql_stmt_ := 'SELECT round(COUNT(*)/DECODE(COUNT(DISTINCT identity), 0, 1, COUNT(DISTINCT identity)), 2) FROM fnd_user_role_runtime';
   rec_.drill_down_stmt_ := 'SELECT identity, COUNT(*) NUMBER_OF_ROLES FROM fnd_user_role_runtime GROUP BY identity';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := NULL;
   rec_.help_text_ := 'The number of roles that the users are connected to in average. Very many roles per user may decrease logon performance.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'LOGGED_ON_USERS';
   rec_.description_ := 'Number of current logged on user sessions';
   rec_.category_id_ := 'USERS_ROLES';
   rec_.order_seq_ := '3';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM fnd_client_logon';
   rec_.drill_down_stmt_ := 'SELECT   directory_id, os_user, machine, program, user_agent, node, session_created FROM fnd_client_logon';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := NULL;
   rec_.help_text_ := 'Number of sessions currently using TEST Applications.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'TEST_ACCOUNTS';
   rec_.description_ := 'Number of active TEST Internal Accounts';
   rec_.category_id_ := 'USERS_ROLES';
   rec_.order_seq_ := '4';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM dba_users WHERE account_status = ''OPEN'' and username in (''TESTAPP'',''TESTADMIN'',''TESTCONNECT'',''TESTPRINT'',''TESTMOBILITY'',''TESTPLSQLAP'',''TESTWEBCONFIG'',''TESTMONITORING'')';
   rec_.drill_down_stmt_ := 'SELECT 0 FROM dual WHERE 1=2';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := NULL;
   rec_.help_text_ := 'Number of active TEST Internal Accounts.';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------
-- Entries for category LICENSE
------------------------------------

   rec_.entry_id_ := 'DAYS_LEFT';
   rec_.description_ := 'Number of days remaining until TEST license expires';
   rec_.category_id_ := 'LICENSE';
   rec_.order_seq_ := '1';
   rec_.sql_stmt_ := 'SELECT FLOOR(Fnd_License_API.Get_Expiration_Date - sysdate) FROM dual';
   rec_.drill_down_stmt_ := 'SELECT Fnd_License_API.Get_Expiration_Date Expiration_Date FROM DUAL';
   rec_.lower_warning_limit_ := 105;
   rec_.upper_warning_limit_ := NULL;
   rec_.help_text_ := 'The TEST license must be updated before it expires. A new TEST license will have to be obtained, please contact your TEST representative.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'USERS_LEFT';
   rec_.description_ := 'Number of users left until license limit is reached';
   rec_.category_id_ := 'LICENSE';
   rec_.order_seq_ := '2';
   rec_.sql_stmt_ := 'SELECT Fnd_License_API.Get_Licensed_Full_Users  - Fnd_License_API.Get_Consumed_Full_Users FROM dual';
   rec_.drill_down_stmt_ := 'SELECT Fnd_License_API.Get_Licensed_Full_Users Licensed , Fnd_License_API.Get_Consumed_Full_Users Consumed FROM dual';
   rec_.lower_warning_limit_ := 5;
   rec_.upper_warning_limit_ := NULL;
   rec_.help_text_ := 'To be able to add more users than the current license limit, new TEST licenses will have to be obtained. Please contact your TEST representative.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'LICENSE_LIMIT';
   rec_.description_ := 'Max number of licensed users';
   rec_.category_id_ := 'LICENSE';
   rec_.order_seq_ := '3';
   rec_.sql_stmt_ := 'SELECT Fnd_License_API.Get_Licensed_Full_Users FROM dual';
   rec_.drill_down_stmt_ := 'SELECT Fnd_License_API.Get_Licensed_Full_Users Licensed , Fnd_License_API.Get_Consumed_Full_Users Consumed FROM dual';
   rec_.lower_warning_limit_ := NULL;
   rec_.upper_warning_limit_ := NULL;
   rec_.help_text_ := 'To be able to add more users than the current license limit, new TEST licenses will have to be obtained. Please contact your TEST representative.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------
-- Entries for category ORACLE
------------------------------------

   rec_.entry_id_ := 'DEBUG_COMPILED_PACKAGES';
   rec_.description_ := 'Number of debug compiled database packages';
   rec_.category_id_ := 'ORACLE';
   rec_.order_seq_ := '1';
   rec_.sql_stmt_ := 'select count(name) from Oracle_Plsql_Object_Settings where plsql_debug=''TRUE''';
   rec_.drill_down_stmt_ := 'select type, name from Oracle_Plsql_Object_Settings where plsql_debug=''TRUE''';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Debug compiled packages will reduce runtime performance and should not be applied in Production Environments';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'BLOCKED_SESSIONS';
   rec_.description_ := 'Number of blocked sessions';
   rec_.category_id_ := 'ORACLE';
   rec_.order_seq_ := '2';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM SYS.GV_$SESSION WHERE status = ''ACTIVE'' AND blocking_session is not NULL';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Analyze sessions running in the environment. Analyze sizing of Oracle Db.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'BLOCKED_SESSIONS_MAXWAITSECS';
   rec_.description_ := 'Max seconds in wait for blocked sessons';
   rec_.category_id_ := 'ORACLE';
   rec_.order_seq_ := '3';
   rec_.sql_stmt_ := 'SELECT COALESCE(MAX(seconds_in_wait),0) AS seconds_in_wait FROM SYS.GV_$SESSION WHERE wait_time = 0 AND status = ''ACTIVE'' AND blocking_session IS NOT NULL';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 600;
   rec_.help_text_ := 'Analyze sessions running in the environment. Analyze sizing of Oracle Db.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------
-- Entries for category ORACLE_AUDIT
------------------------------------

   rec_.entry_id_ := 'SIZE_AUD$';
   rec_.description_ := 'Size of AUD$ in Mb';
   rec_.category_id_ := 'ORACLE_AUDIT';
   rec_.order_seq_ := '1';
   rec_.sql_stmt_ := 'select nvl(Sum(round(bytes / 1024 / 1024, 1)),0) from sys.dba_segments where owner = ''SYS'' and segment_name = ''AUD$''';
   rec_.drill_down_stmt_ := 'select round(bytes / 1024 / 1024, 1)  "Standard Audit table size (MB)", tablespace_name "Tablespace" from sys.dba_segments where owner = ''SYS'' and segment_name = ''AUD$''';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 10000;
   rec_.help_text_ := 'Total size of AUD$ table in MB.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'SIZE_UNIFIED_AUD';
   rec_.description_ := 'Size of Unified Auditing in Mb';
   rec_.category_id_ := 'ORACLE_AUDIT';
   rec_.order_seq_ := '2';
   rec_.sql_stmt_ := 'select nvl(Sum(round(bytes / 1024 / 1024, 1)),0) from sys.dba_segments where owner = ''AUDSYS''';
   rec_.drill_down_stmt_ := 'select segment_name,segment_type,round(bytes / 1024 / 1024, 1)  "Audit segment size (MB)", tablespace_name "Tablespace" from sys.dba_segments where owner = ''AUDSYS'' order by bytes desc';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 10000;
   rec_.help_text_ := 'Total size of Unified Auditing table in MB.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------
-- Entries for category PLSQLAP
------------------------------------

   rec_.entry_id_ := 'PLSQLAP_PING';
   rec_.description_ := 'PL/SQL Access Provider configuration test';
   rec_.category_id_ := 'PLSQLAP';
   rec_.order_seq_ := '1';
   rec_.sql_stmt_ := 'SELECT Plsqlap_Server_API.Ping_Result__ FROM sys.dual';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 1;
   rec_.upper_warning_limit_ := NULL;
   rec_.help_text_ := 'Checks if the PL/SQL Access Provider configuration is working.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------------
-- Entries for category APPLICATION_SEARCH
------------------------------------------

   rec_.entry_id_ := 'APPLICATION_SEARCH_SYNCH';
   rec_.description_ := 'Application Search unsynchronized documents';
   rec_.category_id_ := 'APPLICATION_SEARCH';
   rec_.order_seq_ := '1';
   rec_.sql_stmt_ := 'SELECT count(*) FROM search_domain_pending_document';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 1000;
   rec_.help_text_ := 'Number of unsynchronized Application Search documents.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'APPLICATION_SEARCH_ERROR';
   rec_.description_ := 'Application Search documents with errors';
   rec_.category_id_ := 'APPLICATION_SEARCH';
   rec_.order_seq_ := '2';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM SEARCH_DOMAIN_ERRORS';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Number of Application Search documents with errors.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------------
-- Entries for category CACHE
------------------------------------------
                           
   rec_.entry_id_ := 'DICTIONARY_REFRESH';
   rec_.description_ := 'Dictionary cache status';
   rec_.category_id_ := 'CACHE';
   rec_.order_seq_ := '1';
   rec_.sql_stmt_ := 'SELECT dictionary_sys.Check_Dictionary_Storage_ FROM dual';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'The oracle objects have changed but the dictionary cache has not been updated.';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                            
   rec_.entry_id_ := 'REFERENCE_REFRESH';
   rec_.description_ := 'Reference cache status';
   rec_.category_id_ := 'CACHE';
   rec_.order_seq_ := '2';
   rec_.sql_stmt_ := 'SELECT reference_sys.Check_Active_List_ FROM dual';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'The oracle objects have changed but the reference cache has not been updated.';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                        
   rec_.entry_id_ := 'REPORT_REFRESH';
   rec_.description_ := 'Report cache status';
   rec_.category_id_ := 'CACHE';
   rec_.order_seq_ := '3';
   rec_.sql_stmt_ := 'SELECT report_sys.Check_Reference_Storage_ FROM dual';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'The oracle objects have changed but the report cache has not been updated.';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------------
-- Entries for category TRIGGERS
------------------------------------------
                           
   rec_.entry_id_ := 'EVENT_ACTIONS';
   rec_.description_ := 'Number of disabled active triggers for events';
   rec_.category_id_ := 'TRIGGERS';
   rec_.order_seq_ := '1';
   rec_.sql_stmt_ := 'SELECT count(*) FROM fnd_event_action ea, fnd_event e WHERE ea.event_id=e.event_id and  ea.event_lu_name = e.event_lu_name  AND e.event_type_db=''CUSTOM'' AND ea.action_enable=''TRUE'' AND NOT EXISTS (SELECT 1 FROM SYS.dba_triggers t WHERE  t.OWNER = Fnd_Session_Api.Get_App_Owner() AND t.status=''ENABLED'' AND t.trigger_name LIKE ''%''||ea.EVENT_ID||''%'')';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Enable event triggers that should be enabled.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------------
-- Entries for category CONNECT
------------------------------------------
                          
   rec_.entry_id_ := 'APPL_MESSAGES_WITH_RETRIES';
   rec_.description_ := 'Number of application messages with unresponsable routing address';
   rec_.category_id_ := 'CONNECT';
   rec_.order_seq_ := '1';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM address_label WHERE state=''Waiting'' AND retried_count > 0';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Look for more information in the Connect Server alert log file.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------------
-- Entries for category PRINT_AGENT
------------------------------------------
                            
   rec_.entry_id_ := 'PRINTJOB_REMOTEWAITING_30MIN';
   rec_.description_ := 'Print job in status "Remote Waiting" more than 30min';
   rec_.category_id_ := 'PRINT_AGENT';
   rec_.order_seq_ := '1';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM print_job WHERE status_db = ''REMOTE WAITING'' AND objversion  < to_char(sysdate - 1/48,''YYYYMMDDHH24MISS'')';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Look in Solution Manager what printers that have problems.';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                           
   rec_.entry_id_ := 'PRINTJOB_REMOTEWAITING_15MIN';
   rec_.description_ := 'Print job in status "Remote Waiting" more than 15min';
   rec_.category_id_ := 'PRINT_AGENT';
   rec_.order_seq_ := '2';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM print_job WHERE status_db = ''REMOTE WAITING'' AND objversion  < to_char(sysdate - 1/96,''YYYYMMDDHH24MISS'')';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Look in Solution Manager what printers that have problems.';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                           
   rec_.entry_id_ := 'PRINTAGENTS_REMOTE_ACTIVE';
   rec_.description_ := 'Remote print agents active';
   rec_.category_id_ := 'PRINT_AGENT';
   rec_.order_seq_ := '3';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM remote_printing_node WHERE objversion > to_char(sysdate - 1/96,''YYYYMMDDHH24MISS'')';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := NULL;
   rec_.help_text_ := 'This warning can be ignored if there is a decreasing trend of remote waiting print jobs.';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------------
-- Entries for category PRINT_QUEUE
------------------------------------------
                             
   rec_.entry_id_ := 'PRINTJOB_FAILED_24H';
   rec_.description_ := 'Print job in status "Error" last 24h';
   rec_.category_id_ := 'PRINT_QUEUE';
   rec_.order_seq_ := '1';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM print_job WHERE status_db = ''ERROR'' AND objversion > to_char(sysdate - 1,''YYYYMMDDHH24MISS'')';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Look for further information under Print Manager in Reporting.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                            
   rec_.entry_id_ := 'PRINTJOB_WAITING_15M';
   rec_.description_ := 'Print job in status "Waiting" more than 15m';
   rec_.category_id_ := 'PRINT_QUEUE';
   rec_.order_seq_ := '2';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM print_job WHERE status_db = ''WAITING'' AND objversion < to_char(sysdate - 1/96,''YYYYMMDDHH24MISS'')';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Look for further information under Print Manager in Reporting.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                             
   rec_.entry_id_ := 'PRINTJOB_WORKING_2H';
   rec_.description_ := 'Print jobs in status "Working" more than 2h';
   rec_.category_id_ := 'PRINT_QUEUE';
   rec_.order_seq_ := '3';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM print_job WHERE status_db = ''WORKING'' AND objversion < to_char(sysdate - 1/12,''YYYYMMDDHH24MISS'')';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Look for further information under Print Manager in Reporting.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------------
-- Entries for category BATCH_PROCESSOR
------------------------------------------
                            
   rec_.entry_id_ := 'APPL_MESSAGES_PROCESSING_2H';
   rec_.description_ := 'Number of application messages processing more than 2h';
   rec_.category_id_ := 'BATCH_PROCESSOR';
   rec_.order_seq_ :=  '1';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM application_message WHERE state = ''Processing'' AND state_date < sysdate - 2/24';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Look for more information under TEST Connect in Solution Manager.';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                            
   rec_.entry_id_ := 'APPL_MESSAGES_RELEASED_2H';
   rec_.description_ := 'Number of application messages still in state released more than 2h';
   rec_.category_id_ := 'BATCH_PROCESSOR';
   rec_.order_seq_ := '2';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM application_message WHERE state = ''Released'' AND state_date < sysdate - 2/24 ';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Look for more information under TEST Connect in Solution Manager.';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                             
   rec_.entry_id_ := 'APPL_SERVER_BQ_WITH_ERROR';
   rec_.description_ := 'Number of internal application messages with error in the last 2h';
   rec_.category_id_ := 'BATCH_PROCESSOR';
   rec_.order_seq_ := '3';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM application_message WHERE queue LIKE ''BATCH%'' AND NOT message_function = ''PrintAgent'' AND (error_text IS NOT NULL AND error_text not like ''Batch Processor Upgrade:%'')';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := 'Look for more information under TEST Connect in Solution Manager.';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------------
-- Entries for category DATABASE_CONFIG
------------------------------------------
                           
   rec_.entry_id_ := 'TABLES_BYTE_MODE';
   rec_.description_ := 'No of tables in BYTE mode';
   rec_.category_id_ := 'DATABASE_CONFIG';
   rec_.order_seq_ :=  '1';
   rec_.sql_stmt_ := 'SELECT COUNT(DISTINCT u.table_name) FROM User_Tab_Columns u WHERE data_type IN (''VARCHAR2'', ''CHAR'') AND char_used = ''B'' AND table_name NOT LIKE ''AQ$%'' AND EXISTS (SELECT 1 FROM user_tables WHERE table_name = u.TABLE_NAME AND secondary = ''N'')';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := '';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                          
   rec_.entry_id_ := 'PACKAGES_BYTE_MODE';
   rec_.description_ := 'No of packages in BYTE mode';
   rec_.category_id_ := 'DATABASE_CONFIG';
   rec_.order_seq_ :=  '2';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM user_plsql_object_settings WHERE nls_length_semantics = ''BYTE''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := '';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                           
   rec_.entry_id_ := 'INDEX_COST_ADJ';
   rec_.description_ := 'Index cost adjustment';
   rec_.category_id_ := 'DATABASE_CONFIG';
   rec_.order_seq_ :=  '3';
   rec_.sql_stmt_ := 'SELECT value FROM v$parameter WHERE name like ''optimizer_index_cost_adj%''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 30;
   rec_.help_text_ := '';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                          
   rec_.entry_id_ := 'BUFFER_CACHE_SIZE';
   rec_.description_ := 'Buffer Cache Size (GB)';
   rec_.category_id_ := 'DATABASE_CONFIG';
   rec_.order_seq_ :=  '4';
   rec_.sql_stmt_ := 'SELECT BYTES/(1024*1024*1024) FROM v$sgainfo WHERE name=''Buffer Cache Size''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 2;
   rec_.upper_warning_limit_ := NULL;
   rec_.help_text_ := '';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                             
   rec_.entry_id_ := 'PLUGGABLE';
   rec_.description_ := 'Pluggable DB';
   rec_.category_id_ := 'DATABASE_CONFIG';
   rec_.order_seq_ :=  '5';
   rec_.sql_stmt_ := 'SELECT sys_context(''USERENV'',''CON_ID'') FROM dual';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 1;
   rec_.upper_warning_limit_ := NULL;
   rec_.help_text_ := '';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                          
   rec_.entry_id_ := 'SGA_TARGET';
   rec_.description_ := 'SGA Target';
   rec_.category_id_ := 'DATABASE_CONFIG';
   rec_.order_seq_ :=  '6';
   rec_.sql_stmt_ := 'SELECT value FROM v$parameter WHERE name = ''sga_target''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := '';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'MEMORY_TARGET';
   rec_.description_ := 'MEMORY Target';
   rec_.category_id_ := 'DATABASE_CONFIG';
   rec_.order_seq_ :=  '7';
   rec_.sql_stmt_ := 'SELECT value FROM v$parameter WHERE name = ''memory_target''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := '';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                            
   rec_.entry_id_ := 'PGA_AGGREGATE_LIMIT';
   rec_.description_ := 'PGA Aggregate Limit (MB)';
   rec_.category_id_ := 'DATABASE_CONFIG';
   rec_.order_seq_ :=  '8';
   rec_.sql_stmt_ := 'SELECT value/(1024*1024) FROM v$parameter WHERE name = ''pga_aggregate_limit''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 0;
   rec_.help_text_ := '';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                        
   rec_.entry_id_ := 'COMPATIBLE';
   rec_.description_ := 'Compatible';
   rec_.category_id_ := 'DATABASE_CONFIG';
   rec_.order_seq_ :=  '9';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM v$version ver, v$parameter par WHERE ver.banner like ''%Oracle Database%'' AND par.name = ''compatible'' AND substr(ver.banner,instr(ver.banner,''.'',-1,4)-2,6) = par.value';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 1;
   rec_.help_text_ := '';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                            
   rec_.entry_id_ := 'OPTIMIZER_FEATURES_ENABLE';
   rec_.description_ := 'Optimizer features enable';
   rec_.category_id_ := 'DATABASE_CONFIG';
   rec_.order_seq_ :=  '10';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM v$version ver, v$parameter par WHERE ver.banner like ''%Oracle Database%'' AND par.name = ''optimizer_features_enable'' AND substr(banner,instr(ver.banner,''.'',-1,4)-2,6)=substr(par.value,0,6)';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 1;
   rec_.help_text_ := '';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                            
   rec_.entry_id_ := 'ACCUM_LOGICAL_IO';
   rec_.description_ := 'Accumulcated Logical IO';
   rec_.category_id_ := 'DATABASE_CONFIG';
   rec_.order_seq_ :=  '11';
   rec_.sql_stmt_ := 'SELECT value FROM v$sysstat WHERE name IN (''consistent gets'')';
   rec_.drill_down_stmt_ := '';
   rec_.help_text_ := '';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                            
   rec_.entry_id_ := 'ACCUM_PHYSICAL_IO';
   rec_.description_ := 'Accumulcated Physical IO';
   rec_.category_id_ := 'DATABASE_CONFIG';
   rec_.order_seq_ :=  '12';
   rec_.sql_stmt_ := 'SELECT value FROM v$sysstat WHERE name IN (''physical reads'')';
   rec_.drill_down_stmt_ := '';
   rec_.help_text_ := '';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                             
   rec_.entry_id_ := 'DB_SESSIONS';
   rec_.description_ := 'DB Sessions';
   rec_.category_id_ := 'DATABASE_CONFIG';
   rec_.order_seq_ :=  '13';
   rec_.sql_stmt_ := 'SELECT COUNT(*) from v$session';
   rec_.drill_down_stmt_ := '';
   rec_.help_text_ := '';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                             
   rec_.entry_id_ := 'DB_ACTIVE_SESSIONS';
   rec_.description_ := 'DB Active Sessions';
   rec_.category_id_ := 'DATABASE_CONFIG';
   rec_.order_seq_ :=  '14';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM v$session WHERE status=''ACTIVE'' AND program IN (''TEST PLSQL Gateway'',''TEST Middleware Server Main'')';
   rec_.drill_down_stmt_ := '';
   rec_.help_text_ := '';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                             
   rec_.entry_id_ := 'DB_BLOCKED_SESSIONS';
   rec_.description_ := 'DB Blocked Sessions';
   rec_.category_id_ := 'DATABASE_CONFIG';
   rec_.order_seq_ :=  '15';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM v$session WHERE blocking_session IS NOT NULL';
   rec_.drill_down_stmt_ := '';
   rec_.help_text_ := '';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                                       
   rec_.entry_id_ := 'DB_BLOCKED_SESSIONS_1S';
   rec_.description_ := 'DB Blocked Sessions more than 1 second';
   rec_.category_id_ := 'DATABASE_CONFIG';
   rec_.order_seq_ :=  '15';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM v$session WHERE blocking_session IS NOT NULL and seconds_in_wait>1';
   rec_.drill_down_stmt_ := '';
   rec_.help_text_ := '';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                
   rec_.entry_id_ := 'DB_BLOCKED_SESSIONS_120S';
   rec_.description_ := 'DB Blocked Sessions more than 120 seconds';
   rec_.category_id_ := 'DATABASE_CONFIG';
   rec_.order_seq_ :=  '15';
   rec_.sql_stmt_ := 'SELECT COUNT(*) FROM v$session WHERE blocking_session IS NOT NULL and seconds_in_wait>120';
   rec_.drill_down_stmt_ := '';
   rec_.help_text_ := '';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'DB_PGA_MEMORY';
   rec_.description_ := 'DB PGA Memory (BYTES)';
   rec_.category_id_ := 'DATABASE_CONFIG';
   rec_.order_seq_ :=  '16';
   rec_.sql_stmt_ := 'SELECT value FROM V$PGASTAT WHERE NAME=''maximum PGA allocated''';
   rec_.drill_down_stmt_ := '';
   rec_.help_text_ := '';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                           
   rec_.entry_id_ := 'DB_SHARED_POOL_SIZE';
   rec_.description_ := 'DB Shared Pool Size (BYTES)';
   rec_.category_id_ := 'DATABASE_CONFIG';
   rec_.order_seq_ :=  '17';
   rec_.sql_stmt_ := 'SELECT SUM(bytes) FROM V$SGASTAT WHERE pool=''shared pool''';
   rec_.drill_down_stmt_ := '';
   rec_.help_text_ := '';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
                         
   rec_.entry_id_ := 'DB_BUFFER_CACHE_SIZE';
   rec_.description_ := 'DB Buffer Cache Size (BYTES)';
   rec_.category_id_ := 'DATABASE_CONFIG';
   rec_.order_seq_ :=  '18';
   rec_.sql_stmt_ := 'SELECT bytes FROM V$SGASTAT WHERE name = ''buffer_cache''';
   rec_.drill_down_stmt_ := '';
   rec_.help_text_ := '';
   rec_.active_ := 'FALSE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

------------------------------------------
-- Entries for category ORACLE_HEALTH
------------------------------------------

   rec_.entry_id_ := 'BLOCK_CORRUPTION';
   rec_.description_ := 'Number of corrupt blocks in database files';
   rec_.category_id_ := 'ORACLE_HEALTH';
   rec_.order_seq_ := '1';
   rec_.sql_stmt_ := 'select count(*) from v$database_block_corruption dbc join dba_extents e on dbc.file# = e.file_id and dbc.block# between e.block_id and e.block_id+e.blocks-1';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 1;
   rec_.help_text_ := 'Number of corrupt blocks in database files.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'FRA_USAGE';
   rec_.description_ := 'Percentage usage of Oracle Flash Recovery Area';
   rec_.category_id_ := 'ORACLE_HEALTH';
   rec_.order_seq_ := '2';
   rec_.sql_stmt_ := 'select case when count(*) = 0 then 0 else round((sum(space_used)/sum(space_limit))*100,0) end as fra_usage from v$recovery_file_dest';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 80;
   rec_.help_text_ := 'Percentage usage of Oracle Flash Recovery Area.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'INVALID_DB_OBJECTS';
   rec_.description_ := 'Invalid database objects';
   rec_.category_id_ := 'ORACLE_HEALTH';
   rec_.order_seq_ := '3';
   rec_.sql_stmt_ := 'select count(*) from all_objects where owner=''TESTAPP'' and status=''INVALID''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 1;
   rec_.help_text_ := 'Number of invalid objects in the database owned by TESTAPP.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'RMAN_BACKUP';
   rec_.description_ := 'Last full RMAN backup of database';
   rec_.category_id_ := 'ORACLE_HEALTH';
   rec_.order_seq_ := '4';
   rec_.sql_stmt_ := 'select floor((sysdate-nvl(max(end_time),sysdate))*24*60) from v$rman_backup_job_details where input_type = ''DB FULL'' and status = ''COMPLETED''';
   rec_.drill_down_stmt_ := '';
   rec_.help_text_ := 'Minutes since last full RMAN backup of the database ended with status COMPLETED.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'TBS_TESTAPP_ARCHIVE_DATA';
   rec_.description_ := 'Percentage usage of TESTAPP_ARCHIVE_DATA';
   rec_.category_id_ := 'ORACLE_HEALTH';
   rec_.order_seq_ := '5';
   rec_.sql_stmt_ := 'select round(((sum(bytes)/1024/1024)/(sum(maxbytes)/1024/1024))*100) from dba_data_files where upper(tablespace_name) = ''TESTAPP_ARCHIVE_DATA''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 80;
   rec_.help_text_ := 'Percentage usage of TESTAPP_ARCHIVE_DATA tablespace.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'TBS_TESTAPP_ARCHIVE_INDEX';
   rec_.description_ := 'Percentage usage of TESTAPP_ARCHIVE_INDEX';
   rec_.category_id_ := 'ORACLE_HEALTH';
   rec_.order_seq_ := '6';
   rec_.sql_stmt_ := 'select round(((sum(bytes)/1024/1024)/(sum(maxbytes)/1024/1024))*100) from dba_data_files where upper(tablespace_name) = ''TESTAPP_ARCHIVE_INDEX''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 80;
   rec_.help_text_ := 'Percentage usage of TESTAPP_ARCHIVE_INDEX tablespace.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'TBS_TESTAPP_DATA';
   rec_.description_ := 'Percentage usage of TESTAPP_DATA';
   rec_.category_id_ := 'ORACLE_HEALTH';
   rec_.order_seq_ := '7';
   rec_.sql_stmt_ := 'select round(((sum(bytes)/1024/1024)/(sum(maxbytes)/1024/1024))*100) from dba_data_files where upper(tablespace_name) = ''TESTAPP_DATA''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 80;
   rec_.help_text_ := 'Percentage usage of TESTAPP_DATA tablespace.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'TBS_TESTAPP_INDEX';
   rec_.description_ := 'Percentage usage of TESTAPP_INDEX';
   rec_.category_id_ := 'ORACLE_HEALTH';
   rec_.order_seq_ := '8';
   rec_.sql_stmt_ := 'select round(((sum(bytes)/1024/1024)/(sum(maxbytes)/1024/1024))*100) from dba_data_files where upper(tablespace_name) = ''TESTAPP_INDEX''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 80;
   rec_.help_text_ := 'Percentage usage of TESTAPP_INDEX tablespace.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'TBS_TESTAPP_LOB';
   rec_.description_ := 'Percentage usage of TESTAPP_LOB';
   rec_.category_id_ := 'ORACLE_HEALTH';
   rec_.order_seq_ := '9';
   rec_.sql_stmt_ := 'select round(((sum(bytes)/1024/1024)/(sum(maxbytes)/1024/1024))*100) from dba_data_files where upper(tablespace_name) = ''TESTAPP_LOB''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 80;
   rec_.help_text_ := 'Percentage usage of TESTAPP_LOB tablespace.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'TBS_TESTAPP_REPORT_DATA';
   rec_.description_ := 'Percentage usage of TESTAPP_REPORT_DATA';
   rec_.category_id_ := 'ORACLE_HEALTH';
   rec_.order_seq_ := '10';
   rec_.sql_stmt_ := 'select round(((sum(bytes)/1024/1024)/(sum(maxbytes)/1024/1024))*100) from dba_data_files where upper(tablespace_name) = ''TESTAPP_REPORT_DATA''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 80;
   rec_.help_text_ := 'Percentage usage of TESTAPP_REPORT_DATA tablespace.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'TBS_TESTAPP_REPORT_INDEX';
   rec_.description_ := 'Percentage usage of TESTAPP_REPORT_INDEX';
   rec_.category_id_ := 'ORACLE_HEALTH';
   rec_.order_seq_ := '11';
   rec_.sql_stmt_ := 'select round(((sum(bytes)/1024/1024)/(sum(maxbytes)/1024/1024))*100) from dba_data_files where upper(tablespace_name) = ''TESTAPP_REPORT_INDEX''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 80;
   rec_.help_text_ := 'Percentage usage of TESTAPP_REPORT_INDEX tablespace.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'TBS_SYSAUX';
   rec_.description_ := 'Percentage usage of SYSAUX';
   rec_.category_id_ := 'ORACLE_HEALTH';
   rec_.order_seq_ := '12';
   rec_.sql_stmt_ := 'select round(((sum(bytes)/1024/1024)/(sum(maxbytes)/1024/1024))*100) from dba_data_files where upper(tablespace_name) = ''SYSAUX''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 80;
   rec_.help_text_ := 'Percentage usage of SYSAUX tablespace.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'TBS_SYSTEM';
   rec_.description_ := 'Percentage usage of SYSTEM';
   rec_.category_id_ := 'ORACLE_HEALTH';
   rec_.order_seq_ := '13';
   rec_.sql_stmt_ := 'select round(((sum(bytes)/1024/1024)/(sum(maxbytes)/1024/1024))*100) from dba_data_files where upper(tablespace_name) = ''SYSTEM''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 80;
   rec_.help_text_ := 'Percentage usage of SYSTEM tablespace.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'TBS_UNDOTBS';
   rec_.description_ := 'Percentage usage of UNDOTBS';
   rec_.category_id_ := 'ORACLE_HEALTH';
   rec_.order_seq_ := '14';
   rec_.sql_stmt_ := 'select round(((sum(bytes)/1024/1024)/(sum(maxbytes)/1024/1024))*100) from dba_data_files where upper(tablespace_name) = ''UNDOTBS''';
   rec_.drill_down_stmt_ := '';
   rec_.help_text_ := 'Percentage usage of UNDOTBS tablespace.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'TBS_TESTTAS_DATA';
   rec_.description_ := 'Percentage usage of TESTTAS_DATA';
   rec_.category_id_ := 'ORACLE_HEALTH';
   rec_.order_seq_ := '14';
   rec_.sql_stmt_ := 'select round(((sum(bytes)/1024/1024)/(sum(maxbytes)/1024/1024))*100) from dba_data_files where upper(tablespace_name) = ''TESTTAS_DATA''';
   rec_.drill_down_stmt_ := '';
   rec_.help_text_ := 'Percentage usage of TESTTAS_DATA tablespace.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'TBS_TESTTAS_INDEX';
   rec_.description_ := 'Percentage usage of TESTTAS_INDEX';
   rec_.category_id_ := 'ORACLE_HEALTH';
   rec_.order_seq_ := '14';
   rec_.sql_stmt_ := 'select round(((sum(bytes)/1024/1024)/(sum(maxbytes)/1024/1024))*100) from dba_data_files where upper(tablespace_name) = ''TESTTAS_INDEX''';
   rec_.drill_down_stmt_ := '';
   rec_.help_text_ := 'Percentage usage of TESTTAS_INDEX tablespace.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);



   rec_.entry_id_ := 'TBS_USERS';
   rec_.description_ := 'Percentage usage of USERS';
   rec_.category_id_ := 'ORACLE_HEALTH';
   rec_.order_seq_ := '15';
   rec_.sql_stmt_ := 'select round(((sum(bytes)/1024/1024)/(sum(maxbytes)/1024/1024))*100) from dba_data_files where upper(tablespace_name) = ''USERS''';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 80;
   rec_.help_text_ := 'Percentage usage of USERS tablespace.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'TBS_TEMP';
   rec_.description_ := 'Percentage usage of TEMP';
   rec_.category_id_ := 'ORACLE_HEALTH';
   rec_.order_seq_ := '16';
   rec_.sql_stmt_ := 'select round((sum(allocated_space)/sum(tablespace_size))*100) from dba_temp_free_space';
   rec_.drill_down_stmt_ := '';
   rec_.help_text_ := 'Percentage usage of TEMP tablespace.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'ALERT_LOG';
   rec_.description_ := 'Number of ORA-600 errors in the Oracle alert log file the last 24H';
   rec_.category_id_ := 'ORACLE_HEALTH';
   rec_.order_seq_ := '17';
   rec_.sql_stmt_ := 'select count(*) from sys.amm_x$dbgalertext where originating_timestamp > (systimestamp-24/24) and regexp_like (message_text, ''(ORA-00600)'')';
   rec_.drill_down_stmt_ := '';
   rec_.lower_warning_limit_ := 0;
   rec_.upper_warning_limit_ := 1;
   rec_.help_text_ := 'Number of ORA-600 errors in the Oracle alert log file the last 24H.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);

   rec_.entry_id_ := 'DATABASE_UPTIME';
   rec_.description_ := 'Database Uptime';
   rec_.category_id_ := 'ORACLE_HEALTH';
   rec_.order_seq_ := '18';
   rec_.sql_stmt_ := 'select floor((sysdate-startup_time)*24*60) from v$instance';
   rec_.drill_down_stmt_ := '';
   rec_.help_text_ := 'Number of minutes since the instance was started.';
   rec_.active_ := 'TRUE';
   rec_.system_defined_ := 'TRUE';
   Import(rec_);
END;
/

COMMIT;


